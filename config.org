#+TITLE: My GNU Emacs Config
#+AUTHOR: Samuel Talbot
#+DESCRIPTION: My DOOM Emacs Config
#+STARTUP: showeverything
#+OPTIONS: toc:2
#+PROPERTY: header-args :tangle config.el
#+AUTO_TANGLE: t

* TABLE ON CONTENTS :toc:
- [[#appearance][APPEARANCE]]
  - [[#theme][Theme]]
  - [[#line-numbers][Line Numbers]]
- [[#configure-doom-modules][CONFIGURE DOOM MODULES]]
- [[#load-packages][LOAD PACKAGES]]
- [[#org-mode][ORG MODE]]
  - [[#org-auto-tangle][Org Auto Tangle]]
  - [[#org-bullets][Org Bullets]]
  - [[#org-directory][Org Directory]]

* APPEARANCE
** Theme
The theme that DOOM Emacs uses
#+begin_src elisp
(setq doom-theme 'rebecca)
#+end_src

** Line Numbers
Shows line numbers
Can be "t", "relative", or "nil"
#+begin_src elisp
(setq display-line-numbers-type t)
#+end_src

* CONFIGURE DOOM MODULES
You can find the full list of doom modules [[https://github.com/doomemacs/doomemacs/blob/master/docs/modules.org][HERE]]
#+begin_src elisp :tangle init.el
(doom! :input

       :completion
       company             ; the ultimate code completion backend
       ;;helm              ; the *other* search engine for love and life
       ;;ido               ; the other *other* search engine...
       ;;ivy               ; a search engine for love and life
       vertico             ; the search engine of the future

       :ui
       doom                ; what makes DOOM look the way it does
       doom-dashboard      ; a nifty splash screen for Emacs
       ;;doom-quit         ; DOOM quit-message prompts when you quit Emacs
       ;;(emoji +unicode)  ; ðŸ™‚
       hl-todo             ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
       ;;indent-guides     ; highlighted indent columns
       ligatures           ; ligatures and symbols to make your code pretty again
       ;;minimap           ; show a map of the code on the side
       modeline            ; snazzy, Atom-inspired modeline, plus API
       ;;nav-flash         ; blink cursor line after big motions
       ;;neotree           ; a project drawer, like NERDTree for vim
       ophints             ; highlight the region an operation acts on
       (popup +defaults)   ; tame sudden yet inevitable temporary windows
       ;;tabs              ; a tab bar for Emacs
       ;;treemacs          ; a project drawer, like neotree but cooler
       ;;unicode           ; extended unicode support for various languages
       (vc-gutter +pretty) ; vcs diff in the fringe
       vi-tilde-fringe     ; fringe tildes to mark beyond EOB
       ;;window-select     ; visually switch windows
       workspaces          ; tab emulation, persistence & separate workspaces

       :editor
       (evil +everywhere)  ; come to the dark side, we have cookies
       file-templates      ; auto-snippets for empty files
       fold                ; (nigh) universal code folding
       ;;(format +onsave)  ; automated prettiness
       snippets            ; my elves. They type so I don't have to
       ;;word-wrap         ; soft wrapping with language-aware indent

       :emacs
       dired               ; making dired pretty [functional]
       electric            ; smarter, keyword-based electric-indent
       ;;ibuffer           ; interactive buffer management
       undo                ; persistent, smarter undo for your inevitable mistakes
       vc                  ; version-control and Emacs, sitting in a tree

       :term
       ;;eshell            ; the elisp shell that works everywhere
       ;;shell             ; simple shell REPL for Emacs
       ;;term              ; basic terminal emulator for Emacs
       vterm               ; the best terminal emulation in Emacs

       :checkers
       syntax              ; tasing you for every semicolon you forget
       (spell +flyspell)   ; tasing you for misspelling mispelling
       grammar             ; tasing grammar mistake every you make

       :tools
       ;;debugger          ; FIXME stepping through code, to help you add bugs
       (eval +overlay)     ; run code, run (also, repls)
       ;;gist              ; interacting with github gists
       lookup              ; navigate your code and its documentation
       lsp                 ; M-x vscode
       magit               ; a git porcelain for Emacs
       ;;rgb               ; creating color strings
       ;;tree-sitter       ; syntax and parsing, sitting in a tree...

       :os
       (:if IS-MAC macos)  ; improve compatibility with macOS

       :lang
       (cc +lsp)           ; C > C++ == 1
       emacs-lisp          ; drown in parentheses
       json                ; At least it ain't XML
       (java +lsp)         ; the poster child for carpal tunnel syndrome
       javascript          ; all(hope(abandon(ye(who(enter(here))))))
       markdown            ; writing docs for people to ignore
       org                 ; organize your plain life in plain text
       python              ; beautiful is better than ugly
       (rust +lsp)         ; Fe2O3.unwrap().unwrap().unwrap().unwrap()
       sh                  ; she sells {ba,z,fi}sh shells on the C xor

       :email

       :app

       :config
       ;;literate
       (default +bindings +smartparens))
#+end_src

* LOAD PACKAGES
Adds packages to packages.el
#+begin_src elisp :tangle packages.el
(package! org-bullets)
(package! org-auto-tangle)
(package! rebecca-theme)
#+end_src

* ORG MODE
** Org Auto Tangle
Allows automatically tangling .org files
#+begin_src elisp
(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  :config
  (setq org-auto-tangle-default nil))
(add-hook 'org-mode-hook 'org-auto-tangle-mode)
#+end_src

** Org Bullets
Fancy bullent points instead of *
#+begin_src elisp
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+end_src

** Org Directory
Seems to be where Org files are stored? need to look into
#+begin_src elisp
(setq org-directory "~/org/")
#+end_src
